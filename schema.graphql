input AUTH_PROVIDER_CREDENTIALS {
  email: String!
  password: String!
}

input AuthProviderSignupData {
  credentials: AUTH_PROVIDER_CREDENTIALS
}

type Comment {
  id: Int!
  postedBy: User
  text: String!
}

"""
The connection type for Comment.
"""
type CommentConnection {
  """
  A list of edges.
  """
  edges: [CommentEdge]

  """
  A list of nodes.
  """
  nodes: [Comment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CommentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Comment
}

"""
Autogenerated input type of CreateComment
"""
input CreateCommentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  postId: ID!
  text: String!
}

"""
Autogenerated return type of CreateComment
"""
type CreateCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment
  errors: [String!]!
}

"""
Autogenerated input type of CreatePost
"""
input CreatePostInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  text: String!
  title: String!
}

"""
Autogenerated return type of CreatePost
"""
type CreatePostPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  post: Post
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  authProvider: AuthProviderSignupData

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  token: String
  user: User
}

"""
Autogenerated input type of LogOutUser
"""
input LogOutUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of LogOutUser
"""
type LogOutUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
}

type Mutation {
  createComment(input: CreateCommentInput!): CreateCommentPayload
  createPost(input: CreatePostInput!): CreatePostPayload
  createUser(input: CreateUserInput!): CreateUserPayload
  logOutUser(input: LogOutUserInput!): LogOutUserPayload
  resetPassword(input: ResetPasswordInput!): ResetPasswordPayload
  resetPasswordRequest(input: ResetPasswordRequestInput!): ResetPasswordRequestPayload
  signInUser(input: SignInUserInput!): SignInUserPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Post {
  comments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CommentConnection!
  id: Int!
  postedBy: User
  text: String!
  title: String!
}

"""
The connection type for Post.
"""
type PostConnection {
  """
  A list of edges.
  """
  edges: [PostEdge]

  """
  A list of nodes.
  """
  nodes: [Post]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Post
}

type Query {
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
  user: User
}

"""
Autogenerated input type of ResetPassword
"""
input ResetPasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String
  newPassword: String
  resetToken: String
}

"""
Autogenerated return type of ResetPassword
"""
type ResetPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
Autogenerated input type of ResetPasswordRequest
"""
input ResetPasswordRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
}

"""
Autogenerated return type of ResetPasswordRequest
"""
type ResetPasswordRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
Autogenerated input type of SignInUser
"""
input SignInUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  credentials: AUTH_PROVIDER_CREDENTIALS
}

"""
Autogenerated return type of SignInUser
"""
type SignInUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

type User {
  comments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CommentConnection!
  email: String!
  id: ID!
  name: String!
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
}