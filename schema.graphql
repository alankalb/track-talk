input AUTH_PROVIDER_CREDENTIALS {
  email: String!
  password: String!
}

input AuthProviderSignupData {
  credentials: AUTH_PROVIDER_CREDENTIALS
}

type Comment {
  id: Int!
  postedBy: User
  text: String!
}

"""
Autogenerated input type of CreateComment
"""
input CreateCommentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  postId: ID!
  text: String!
}

"""
Autogenerated return type of CreateComment
"""
type CreateCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment
  errors: [String!]!
}

"""
Autogenerated input type of CreatePost
"""
input CreatePostInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  text: String!
  title: String!
}

"""
Autogenerated return type of CreatePost
"""
type CreatePostPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  post: Post
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  authProvider: AuthProviderSignupData

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

"""
Autogenerated input type of LogOutUser
"""
input LogOutUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of LogOutUser
"""
type LogOutUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
}

type Mutation {
  createComment(input: CreateCommentInput!): CreateCommentPayload
  createPost(input: CreatePostInput!): CreatePostPayload
  createUser(input: CreateUserInput!): CreateUserPayload
  logOutUser(input: LogOutUserInput!): LogOutUserPayload
  signInUser(input: SignInUserInput!): SignInUserPayload
}

type Post {
  comments: [Comment!]!
  id: Int!
  postedBy: User
  text: String!
  title: String!
}

type Query {
  posts: [Post!]!
  user: User
}

"""
Autogenerated input type of SignInUser
"""
input SignInUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  credentials: AUTH_PROVIDER_CREDENTIALS
}

"""
Autogenerated return type of SignInUser
"""
type SignInUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

type User {
  email: String!
  id: ID!
  name: String!
}